server.port=8181
#spring\u96C6\u6210Mybatis\u73AF\u5883
#pojo\u522B\u540D\u626B\u63CF\u5305,\u5982\u4F55\u662F\u6CE8\u89E3\u5F00\u53D1(sql\u5199\u5728\u7C7B\u4E0A),\u53EF\u4EE5\u4E0D\u7528\u914D\u7F6E
mybatis.type-aliases-package=com.example.demo.entity
#mybatis\u5F00\u542F\u9A7C\u5CF0\u8F6C\u6362   \u6570\u636E\u5E93is_save -->javabean isSave
mybatis.configuration.map-underscore-to-camel-case=true
#springboot\u9ED8\u8BA4\u6570\u636E\u6E90\u914D\u7F6E
spring.datasource.url=jdbc:mysql://140.143.224.21:1024/test?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC&allowMultiQueries=true&zeroDateTimeBehavior=convertToNull
spring.datasource.username=jianghui
spring.datasource.password=jianghui1992
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.name=default
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#springboot\u591A\u6570\u636E\u6E90\u914D\u7F6E
#\u53EF\u4EE5\u914D\u7F6E\u591A\u500B  db1\uFF0Cdb2
custom.datasource.names=db1,db2
custom.datasource.db1.url=jdbc:mysql://localhost:3306/db_store?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC&allowMultiQueries=true&zeroDateTimeBehavior=convertToNull
custom.datasource.db1.username=root
custom.datasource.db1.password=123456
custom.datasource.db1.driver-class-name=com.mysql.jdbc.Driver
custom.datasource.db2.url=jdbc:mysql://localhost:3306/db_store?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC&allowMultiQueries=true&zeroDateTimeBehavior=convertToNull
custom.datasource.db2.username=root
custom.datasource.db2.password=123456
custom.datasource.db2.driver-class-name=com.mysql.jdbc.Driver
# \u4E0B\u9762\u4E3A\u8FDE\u63A5\u6C60\u7684\u8865\u5145\u8BBE\u7F6E\uFF0C\u5E94\u7528\u5230\u4E0A\u9762\u6240\u6709\u6570\u636E\u6E90\u4E2D,\u5982\u679C\u9700\u8981\u8BBE\u7F6E\u5355\u72EC\u8FDE\u63A5\u6C60,\u9700\u8981\u4FEE\u6539\u6CE8\u5165\u5C5E\u6027\u903B\u8F91
# \u521D\u59CB\u5316\u5927\u5C0F\uFF0C\u6700\u5C0F\uFF0C\u6700\u5927
spring.datasource.initialSize=30
spring.datasource.minIdle=20
spring.datasource.maxActive=100
# \u914D\u7F6E\u83B7\u53D6\u8FDE\u63A5\u7B49\u5F85\u8D85\u65F6\u7684\u65F6\u95F4
spring.datasource.maxWait=60000
# \u914D\u7F6E\u95F4\u9694\u591A\u4E45\u624D\u8FDB\u884C\u4E00\u6B21\u68C0\u6D4B\uFF0C\u68C0\u6D4B\u9700\u8981\u5173\u95ED\u7684\u7A7A\u95F2\u8FDE\u63A5\uFF0C\u5355\u4F4D\u662F\u6BEB\u79D2
spring.datasource.timeBetweenEvictionRunsMillis=60000
# \u914D\u7F6E\u4E00\u4E2A\u8FDE\u63A5\u5728\u6C60\u4E2D\u6700\u5C0F\u751F\u5B58\u7684\u65F6\u95F4\uFF0C\u5355\u4F4D\u662F\u6BEB\u79D2
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# \u6253\u5F00PSCache\uFF0C\u5E76\u4E14\u6307\u5B9A\u6BCF\u4E2A\u8FDE\u63A5\u4E0APSCache\u7684\u5927\u5C0F
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# \u914D\u7F6E\u76D1\u63A7\u7EDF\u8BA1\u62E6\u622A\u7684filters\uFF0C\u53BB\u6389\u540E\u76D1\u63A7\u754C\u9762sql\u65E0\u6CD5\u7EDF\u8BA1\uFF0C'wall'\u7528\u4E8E\u9632\u706B\u5899
spring.datasource.filters=stat,wall,log4j
# \u901A\u8FC7connectProperties\u5C5E\u6027\u6765\u6253\u5F00mergeSql\u529F\u80FD\uFF1B\u6162SQL\u8BB0\u5F55
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
logging.level.root=info